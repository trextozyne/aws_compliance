def monitor_network_performance(self, instance_id):
        try:
            # Get the details of the instance
            response = self._ec2.describe_instances(InstanceIds=[instance_id])
            instance = response['Reservations'][0]['Instances'][0]

            # Get the Subnet ID of the instance
            subnet_id = instance['SubnetId']

            # Get the Security Groups associated with the instance
            security_groups = instance['SecurityGroups']
            group_ids = []
            for group in security_groups:
                group_ids.append(group['GroupId'])

            # Get the Private IP Address of the instance
            private_ip_address = instance['PrivateIpAddress']

            # Create a new ENI
            eni_response = self._ec2.create_network_interface(
                Description='My new ENI',
                SubnetId=subnet_id,
                Groups=group_ids,
                PrivateIpAddress=private_ip_address
            )

            # Retrieve the ID of the new ENI
            eni_id = eni_response['NetworkInterface']['NetworkInterfaceId']

            # Attach the new ENI to the instance
            self._ec2.attach_network_interface(
                NetworkInterfaceId=eni_id,
                InstanceId=instance_id,
                DeviceIndex=1
            )
        except Exception as e:
            print(f'Error: {e}')
import boto3

# Connect to the Route 53 client
route53 = boto3.client('route53')

# Change the IP address of a DNS record
response = route53.change_resource_record_sets(
    HostedZoneId='YOUR_HOSTED_ZONE_ID',
    ChangeBatch={
        'Changes': [
            {
                'Action': 'UPSERT',
                'ResourceRecordSet': {
                    'Name': 'example.com.',
                    'Type': 'A',
                    'TTL': 300,
                    'ResourceRecords': [
                        {
                            'Value': 'NEW_IP_ADDRESS'
                        }
                    ]
                }
            }
        ]
    }
)

import boto3

# Connect to the EC2 client
ec2 = boto3.client('ec2')

# Update a security group rule
response = ec2.authorize_security_group_ingress(
    GroupId='YOUR_SECURITY_GROUP_ID',
    IpPermissions=[
        {
            'IpProtocol': 'tcp',
            'FromPort': 80,
            'ToPort': 80,
            'IpRanges': [
                {
                    'CidrIp': 'NEW_IP_ADDRESS/32'
                }
            ]
        }
    ]
)

import boto3

# Connect to the EC2 client
ec2 = boto3.client('ec2')

# Update a network ACL rule
response = ec2.create_network_acl_entry(
    NetworkAclId='YOUR_NETWORK_ACL_ID',
    RuleNumber=100,
    Protocol='tcp',
    PortRange={
        'From': 80,
        'To': 80
    },
    Egress=False,
    RuleAction='allow',
    CidrBlock='NEW_IP_ADDRESS/32'
)

at the creation of EC2 clouwatch events are send to lambda, using lambda python how do write this, if it is possible:
Network performance: You can monitor the network performance of your EC2 instances to ensure that they have enough network
 bandwidth to handle the workload. If an instance is experiencing network congestion, you can either increase the network
 bandwidth or migrate the workload to an instance type with better network performance